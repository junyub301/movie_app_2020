{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kUA4BeA,MAxBf,YAAwD,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAOC,EAAS,EAATA,OAC1C,OACI,yBAAKC,UAAU,SACP,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACzC,yBAAKI,UAAU,eACX,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBAAiBD,EAAOI,KAAI,SAACC,EAAMC,GAAP,OAAiB,wBAAIC,IAAKD,EAAOL,UAAU,iBAAiBI,OACtG,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAE,KAA/C,UC0CDC,G,iNA5CbC,MAAQ,CACNC,WAAY,EACZC,OAAS,I,EAGXC,U,sBAAY,8BAAAC,EAAA,sEACmCC,IAAMC,IAAI,4DAD7C,gBACcJ,EADd,EACFK,KAAQA,KAAQL,OACxB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAFzB,2C,mFAMVQ,KAAKN,c,+BAGE,IAAD,EACwBM,KAAKT,MAA3BC,EADF,EACEA,UAAYC,EADd,EACcA,OACpB,OACA,6BAASX,UAAU,aAChBU,EACD,yBAAKV,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGA,yBAAKA,UAAU,UACZW,EAAOR,KAAI,SAAAgB,GAAK,OACjB,kBAAC,EAAD,CACEb,IAAKa,EAAMC,GACXA,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,kB,GAjCRuB,IAAMC,YCJxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f024b58c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ year, title, summary, poster,genres}) {\r\n    return (\r\n        <div className=\"movie\">\r\n                <img src={poster} alt={title} title={title} />\r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"movie__genres\">{genres.map((genre,index) => <li key={index} className=\"genres__genre\">{genre}</li> )}</ul>\r\n                <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n\r\n}\r\n\r\nexport default Movie;","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport Movie from \"./Movie\";\r\nimport \"./App.css\";\r\n\r\n/* \r\n 매 순간 setState를 호출 할때 마다 react는 새로운 state와 함께 render function을 호출한다.\r\n*/\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    isLoading : true,\r\n    movies : []\r\n  };\r\n\r\n  getMovies = async () => {\r\n    const { data: { data: { movies } } } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n    this.setState({ movies, isLoading: false });\r\n  }\r\n  \r\n  componentDidMount(){\r\n    this.getMovies();\r\n  }\r\n\r\n  render(){\r\n    const { isLoading , movies} = this.state;\r\n    return ( \r\n    <section className=\"container\">\r\n      {isLoading ? ( \r\n      <div className=\"loader\">\r\n        <span className=\"loader__text\">Loading...</span>        \r\n      </div>\r\n      ) : ( \r\n        <div className=\"movies\">\r\n          {movies.map(movie => (\r\n          <Movie \r\n            key={movie.id} \r\n            id={movie.id} \r\n            year={movie.year} \r\n            title={movie.title} \r\n            summary={movie.summary} \r\n            poster={movie.medium_cover_image} \r\n            genres={movie.genres}\r\n          />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </section>\r\n    ) \r\n  }\r\n}\r\n\r\n/* 4. Making the Movie App 하면된다  */\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}